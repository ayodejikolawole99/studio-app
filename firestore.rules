rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to employee profile documents.
     * @path /employees/{employeeId}
     * @allow (create) User with UID 'EMP001' can create document '/employees/EMP001' if request.auth.uid == 'EMP001'.
     * @deny (create) User with UID 'USR002' cannot create document '/employees/EMP001' because the UIDs do not match.
     * @allow (get) User with UID 'EMP001' can read document '/employees/EMP001'.
     * @deny (get) User with UID 'USR002' cannot read document '/employees/EMP001'.
     * @allow (update) User with UID 'EMP001' can update document '/employees/EMP001'.
     * @deny (update) User with UID 'USR002' cannot update document '/employees/EMP001'.
     * @allow (delete) User with UID 'EMP001' can delete document '/employees/EMP001'.
     * @deny (delete) User with UID 'USR002' cannot delete document '/employees/EMP001'.
     * @principle Enforces document ownership for all operations on employee profiles.
     */
    match /employees/{employeeId} {
      // Verified identity
      function isSignedIn() {
        return request.auth != null;
      }

      // Is owner
      function isOwner(employeeId) {
        return request.auth.uid == employeeId;
      }

      allow get: if isSignedIn() && isOwner(employeeId);
      allow list: if false; // Listing employees is not permitted.

      allow create: if isSignedIn() && isOwner(employeeId);
      allow update: if isSignedIn() && isOwner(employeeId);
      allow delete: if isSignedIn() && isOwner(employeeId);
    }

    /**
     * @description Controls access to feeding record documents.
     * @path /feedingRecords/{recordId}
     * @allow (get) Any user can read a feeding record document.
     * @deny (create) No user can create a feeding record document.
     * @deny (update) No user can update a feeding record document.
     * @deny (delete) No user can delete a feeding record document.
     * @principle Allows public read access for the feedingRecords but restricts all write access.
     */
    match /feedingRecords/{recordId} {
      allow get, list: if true;
      allow create, update, delete: if false; // Writes are only allowed from the server-side via admin SDK.
    }
  }
}