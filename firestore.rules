/**
 * @fileoverview Firestore Security Rules for the Canteen System.
 *
 * Core Philosophy:
 * This ruleset prioritizes security and data access control. It restricts listing of employees entirely to prevent unauthorized data access.
 * Feeding records are publicly readable to facilitate reporting and display, but write access is denied in the current prototype.
 *
 * Data Structure:
 * - /employees/{employeeId}: Stores employee profiles, with the employeeId used as the document ID.
 * - /feedingRecords/{recordId}: Stores a log of feeding events.
 *
 * Key Security Decisions:
 * - Employee data is NOT listable. This prevents unauthorized enumeration of employee records.
 * - Anonymous authentication is enabled; thus, all read/write rules must account for unauthenticated users. In this prototype, only read access to feeding records is granted.
 * - Write access to feedingRecords is currently denied to all users. This should be changed in a real implementation.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to the /employees collection.
     * @path /employees/{employeeId}
     * @allow (create) - DENIED: No one can create employee records directly through Firestore.
     * @allow (get) - DENIED: No one can get employee records directly through Firestore.
     * @allow (list) - DENIED: No one can list employee records.
     * @allow (update) - DENIED: No one can update employee records directly through Firestore.
     * @allow (delete) - DENIED: No one can delete employee records directly through Firestore.
     * @principle Prevents unauthorized access to employee data.
     */
    match /employees/{employeeId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to the /feedingRecords collection.
     * @path /feedingRecords/{recordId}
     * @allow (get) - Public read access is allowed.
     * @allow (list) - Public read access is allowed.
     * @allow (create) - DENIED: No one can create feeding records through Firestore.
     * @allow (update) - DENIED: No one can update feeding records through Firestore.
     * @allow (delete) - DENIED: No one can delete feeding records through Firestore.
     * @principle Allows public read access for reporting purposes.
     */
    match /feedingRecords/{recordId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}